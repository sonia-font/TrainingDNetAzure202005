// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training.Data.EF;

namespace Training.Data.EF.Migrations
{
    [DbContext(typeof(UnitOfWork))]
    [Migration("20200613170147_Studios_Creation")]
    partial class Studios_Creation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Training.Data.Domain.Studio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c734cf-76f6-4db6-839a-000000000001"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(7842),
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(7859),
                            Name = "Studio 1"
                        },
                        new
                        {
                            Id = new Guid("d9c734cf-76f6-4db6-839a-000000000002"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8438),
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8442),
                            Name = "Studio 2"
                        },
                        new
                        {
                            Id = new Guid("d9c734cf-76f6-4db6-839a-000000000003"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8461),
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8462),
                            Name = "Studio 3"
                        },
                        new
                        {
                            Id = new Guid("d9c734cf-76f6-4db6-839a-000000000004"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8465),
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 22, DateTimeKind.Local).AddTicks(8466),
                            Name = "Studio 4"
                        });
                });

            modelBuilder.Entity("Training.Data.Domain.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("380adbe8-4a03-45fd-8e49-40e7113d347f"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 19, DateTimeKind.Local).AddTicks(1993),
                            DirectedBy = "Bong Joon Ho",
                            Duration = 132,
                            Genre = "Comedy, Drama, Trhiller",
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(7859),
                            Name = "Parasite",
                            StudioId = new Guid("d9c734cf-76f6-4db6-839a-000000000001")
                        },
                        new
                        {
                            Id = new Guid("0b326dfe-a0c6-491b-b529-cc93bd1f91ff"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9655),
                            DirectedBy = "Sam Mendez",
                            Duration = 119,
                            Genre = "Drama, War",
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9684),
                            Name = "1917",
                            StudioId = new Guid("d9c734cf-76f6-4db6-839a-000000000002")
                        },
                        new
                        {
                            Id = new Guid("0698d753-6dec-49d9-8d72-cd28dcb3eb9b"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9708),
                            DirectedBy = "Martin Scorsese",
                            Duration = 209,
                            Genre = "Biography, Crime, Drama",
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9710),
                            Name = "The Irishman",
                            StudioId = new Guid("d9c734cf-76f6-4db6-839a-000000000003")
                        },
                        new
                        {
                            Id = new Guid("5276c2d3-cc9b-48b4-9880-fdacf3df502e"),
                            CreationDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9717),
                            DirectedBy = "Quentin Tarantino",
                            Duration = 161,
                            Genre = "Comedy, Drama",
                            ModifiedDate = new DateTime(2020, 6, 13, 14, 1, 47, 20, DateTimeKind.Local).AddTicks(9718),
                            Name = "Once Upoin a Time... In Hollywood",
                            StudioId = new Guid("d9c734cf-76f6-4db6-839a-000000000004")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
