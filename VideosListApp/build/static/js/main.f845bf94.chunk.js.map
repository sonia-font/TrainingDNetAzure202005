{"version":3,"sources":["VideoList.js","VideoItems.js","App.js","serviceWorker.js","index.js"],"names":["VideoList","require","react_default","a","createElement","className","onSubmit","this","props","addItem","htmlFor","placeholder","ref","formElements","name","value","currentItem","onChange","onInputChange","duration","type","directedBy","genre","Component","VideoItems","renderVideo","item","key","id","onClick","_this","deleteItem","editItem","listItems","entries","map","uuidv1","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","target","checked","newItem","state","setState","preventDefault","sendRequest","editMode","response","getItems","getClearItem","items","React","createRef","_this2","src_VideoList","src_VideoItems","httpVerb","apiMethod","bodyContent","callbackMethod","options","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","body","JSON","stringify","fetch","then","contentType","get","indexOf","status","json","Error","text","catch","error","console","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f845bf94.chunk.js","sourcesContent":["import React, { Component } from 'react'\nconst ReactDOM = require('react-dom')\n\nclass VideoList extends Component {\n    render() {\n        return (\n            <div className=\"videoListMain\">\n                <div className=\"header\">\n                    <form onSubmit={this.props.addItem}>\n                        <div className=\"form-group row \">\n                            <label htmlFor=\"name\" className=\"col-md-1\">Name</label>\n                            <div className=\"col-md-11\">\n                                <input placeholder=\"Video name\"\n                                    ref={this.props.formElements.name}\n                                    value={this.props.currentItem.name}\n                                    onChange={this.props.onInputChange}\n                                    name=\"name\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"duration\" className=\"col-md-1\">Duration</label>\n                            <div className=\"col-md-11\">\n                                <input placeholder=\"Duration\"\n                                    ref={this.props.formElements.duration}\n                                    value={this.props.currentItem.duration}\n                                    type=\"number\"\n                                    onChange={this.props.onInputChange}\n                                    name=\"duration\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"directedBy\" className=\"col-md-1\"> Directed By</label>\n                            <div className=\"col-md-11\">\n                                <input placeholder=\"Directed By\"\n                                    ref={this.props.formElements.directedBy}\n                                    value={this.props.currentItem.directedBy}\n                                    onChange={this.props.onInputChange}\n                                    name=\"directedBy\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"genre\" className=\"col-md-1\"> Genre</label>\n                            <div className=\"col-md-11\">\n                                <input placeholder=\"Genre\"\n                                    ref={this.props.formElements.genre}\n                                    value={this.props.currentItem.genre}\n                                    onChange={this.props.onInputChange}\n                                    name=\"genre\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                        </div>\n                        <button type=\"submit\">Add Task</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoList","import React, { Component } from 'react'\n\nclass VideoItems extends Component {\n  renderVideo = item => {\n    return (\n      <tbody key={item.id}>\n        <tr>\n          <td>{item.name}</td>\n          <td>{item.duration}</td>\n          <td>{item.genre}</td>\n          <td>{item.directedBy}</td>\n          <td><input value=\"Delete\" type=\"button\" className=\"btn btn-danger\" onClick={() => this.props.deleteItem(item.id)} /> </td>\n          <td><input value=\"Edit\" type=\"button\" className=\"btn btn-info\" onClick={() => this.props.editItem(item.id)} /></td>\n        </tr>\n      </tbody>\n    )\n  }\n  render() {\n    const listItems = this.props.entries.map(this.renderVideo)\n    return <table className=\"table table-striped table-dark\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Duration</th>\n          <th>Genre</th>\n          <th>Directed By</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      {listItems}\n    </table>\n  }\n}\nexport default VideoItems","import React, { Component } from 'react'\nimport './App.css'\nimport VideoList from './VideoList'\nimport VideoItems from './VideoItems'\nconst uuidv1 = require('uuid/v1')\nconst urlApi = \"https://netacademy.azurewebsites.net\"; \n//\"https://localhost:44332\"; -local-\n//\"https://az-training-videos-api-je.azurewebsites.net\"; -static en azure-\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      currentItem: this.getClearItem(),\n      items: [],\n      editMode: false\n    }\n    this.formElements = {\n      name: React.createRef(),\n      duration: React.createRef()\n    }\n    this.getItems()\n  }\n\n  onInputChange = e => {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    const newItem = this.state.currentItem\n    newItem.id = newItem.id || uuidv1()\n    newItem[name] = value;\n\n    this.setState({\n      currentItem: newItem\n    })\n  }\n\n  getItems() {\n    this.sendRequest('GET', '/api/videos', null, (response) => {\n      this.setState({\n        items: response\n      })\n    });\n  }\n\n  addItem = e => {\n    e.preventDefault()\n    var currentItem = this.state.currentItem\n    if (currentItem.name !== '') {\n      this.sendRequest(this.state.editMode ? 'PUT' : 'POST', '/api/videos', currentItem, (response) => {\n        this.getItems();\n        this.setState({\n          editMode: false,\n          currentItem: this.getClearItem()\n        })\n      });\n    }\n  }\n\n  deleteItem = id => {\n    this.sendRequest('DELETE', '/api/videos/' + id, null, (response) => {\n      this.getItems();\n    });\n  }\n\n  editItem = id => {\n    this.sendRequest('GET', '/api/videos/' + id, null, (response) => {\n      this.setState({\n        currentItem: response,\n        editMode: true\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Videos List</h1>\n        <VideoList addItem={this.addItem}\n          formElements={this.formElements}\n          onInputChange={this.onInputChange}\n          currentItem={this.state.currentItem}\n        />\n        <VideoItems entries={this.state.items} deleteItem={this.deleteItem} editItem={this.editItem} />\n      </div>\n    )\n  }\n\n  sendRequest(httpVerb, apiMethod, bodyContent, callbackMethod) {\n    const options = {\n      method: httpVerb,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n      }\n    };\n    if (httpVerb != 'GET') { options.body = JSON.stringify(bodyContent); }\n\n    fetch(urlApi + apiMethod, options)\n      .then(response => {\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n          if ((response.status === 200 || response.status === 201)) {\n            return response ? response.json() : '';\n          } else {\n            throw new Error('Something went wrong on api server!');\n          }\n        } else {\n          return response.text();\n        }\n      })\n      .then(response => {\n        callbackMethod(response);\n      }).catch(error => {\n        console.error(error);\n      });\n  }\n\n  getClearItem() {\n    return {\n      id: null,\n      name: '',\n      duration: 0,\n      directedBy: '',\n      genre: ''\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}